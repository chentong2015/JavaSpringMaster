Spring AOP编程
1. @EnableAspectJAutoProxy 激活AspectJ方面编程
2. @Aspect @Component      注入Aspect Bean
3. @Pointcut               定义切入点以及执行的逻辑

TODO: AOP如何解析切面 ?
BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors()
1. 从容器中获取所有的bean进行遍历，从bean的名称中获取class对象，然后判断是否标注@Aspect注解，如果是则为切面类型
2. 通过利用反射拿到method上的注解，判断不同的注解类型@Before, @After
3. 根据不同的注解类型创建指定类型的对象，保存到advisorsCache缓存中

TODO: Spring如何判断bean原始对象需要执行AOP，是否有切面?
Aspect切面本身是一个bean，会添加到Spring容器中
1. 从Spring容器中找出所有切面bean，全部遍历
2. 遍历每一个切面bean的所有方法，是否有匹配的切面方法
3. 如果有则将切面方法(代理逻辑)保存到Proxy代理类型，之后执行